{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/chenmengku/Desktop/COSI/COSI-153A/CPA/components/NewRecipe.js\";\nimport React, { Component, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport ButtonRow from \"./ButtonRow\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      ingredient1 = _useState2[0],\n      setIngredient1 = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var createRecipe = function createRecipe() {\n    fetch('https://api.spoonacular.com/recipes/findByIngredients?ingredients=' + ingredient1 + '&apiKey=79215483b19744afb1a46052ce726bdc').then(function (response) {\n      return response.json();\n    }).then(function (cdata) {\n      console.log(cdata);\n      setData(cdata);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }\n    }, item.title)), React.createElement(View, {\n      style: {\n        flex: 3\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: item.image\n      },\n      style: {\n        width: \"50%\",\n        height: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 30\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: 'https://images.unsplash.com/photo-1481070555726-e2fe8357725c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=870&q=80'\n    },\n    style: styles.imageBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      alignItems: 'stretch',\n      justifyContent: \"center\",\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Just fill in the ingredients that you have, then we can come up some good recipes for you!\")), React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.IngredientsInput,\n    placeholder: \"Ingredients1\",\n    value: ingredient1,\n    onChangeText: function onChangeText(text) {\n      setIngredient1(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"crete recipe\",\n    onPress: createRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: data.slice(0, 10),\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'stretch',\n    justifyContent: 'stretch'\n  },\n  header: {\n    flex: 1,\n    alignItems: 'center',\n    fontSize: 30,\n    padding: 25,\n    fontWeight: \"800\"\n  },\n  imageBackground: {\n    width: '100%',\n    height: '100%',\n    opacity: 0.8\n  },\n  IngredientsInput: {\n    height: 40,\n    width: 400,\n    margin: 12,\n    borderWidth: 1.5,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/chenmengku/Desktop/COSI/COSI-153A/CPA/components/NewRecipe.js"],"names":["React","Component","useState","FlatList","ButtonRow","App","ingredient1","setIngredient1","data","setData","createRecipe","fetch","then","response","json","cdata","console","log","catch","error","renderItem","item","flexDirection","flex","title","uri","image","width","height","styles","container","imageBackground","alignItems","justifyContent","position","top","left","right","bottom","header","backgroundColor","IngredientsInput","text","slice","StyleSheet","create","fontSize","padding","fontWeight","opacity","margin","borderWidth"],"mappings":"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","sourcesContent":["\nimport React, { Component, useState } from 'react';\nimport { StyleSheet, Text, View, Button, ImageBackground, TextInput, Image } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport ButtonRow from './ButtonRow'\n\nexport default function App() {\n  const [ingredient1, setIngredient1] = useState(\"\")\n  const [data,setData] = useState([])\n  \n  const createRecipe = () =>{\n    fetch('https://api.spoonacular.com/recipes/findByIngredients?ingredients='+ingredient1+'&apiKey=79215483b19744afb1a46052ce726bdc')\n      .then((response) => response.json())\n      .then((cdata) => {\n        console.log(cdata)\n        setData(cdata)\n      })\n    .catch((error)=> console.error(error))\n  }\n  const renderItem = ({item}) =>{\n    return (\n      <View style={{flexDirection:\"row\"}}>\n      <View style={{flex:1}}><Text>{item.title}</Text></View>\n      <View style={{flex:3}}><Image source={{uri:item.image}} style={{width:\"50%\", height:\"100%\"}}></Image></View>\n      </View>\n    )\n  }\n  return (\n    <View style={styles.container}>\n      <ImageBackground source={{uri: 'https://images.unsplash.com/photo-1481070555726-e2fe8357725c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=870&q=80'}} style={styles.imageBackground}>\n    </ImageBackground>\n      <View style={{alignItems:'stretch', justifyContent:\"center\", position: 'absolute', top: 0, left: 0, right: 0, bottom: 0}}>\n        <View>\n          <Text style={styles.header}>\n              Just fill in the ingredients that you have, then we can come up some good recipes for you!\n          </Text>\n        </View>\n      <View style={{backgroundColor:\"white\", justifyContent:\"center\", alignItems:\"center\"}}>\n        <TextInput style={styles.IngredientsInput} placeholder=\"Ingredients1\" value={ingredient1} onChangeText={text=>{setIngredient1(text)}}></TextInput>\n        {/* <TextInput style={styles.IngredientsInput}placeholder=\"Ingredients2\"></TextInput>\n        <TextInput style={styles.IngredientsInput}placeholder=\"Ingredients3\"></TextInput>\n        <TextInput style={styles.IngredientsInput}placeholder=\"Ingredients4\"></TextInput>\n        <TextInput style={styles.IngredientsInput}placeholder=\"Ingredients5\"></TextInput> */}\n        {/* <ButtonRow FirstButtonTitle = \"create recipes\" SecondButtonTitle = \"more ingredients\"/> */}\n        <Button title=\"crete recipe\" onPress={createRecipe}></Button>\n      </View>\n      <FlatList data = {data.slice(0,10)} renderItem={renderItem} keyExtractor={item=>item.title}></FlatList>\n      </View>\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'stretch',\n    justifyContent: 'stretch',\n  },\n  header: {\n    flex:1,\n    alignItems:'center',\n    fontSize:30,\n    padding:25,\n    fontWeight:\"800\",\n  },\n  imageBackground: {\n    width: '100%',\n     height: '100%',\n    opacity: 0.8\n  },\n  IngredientsInput:{\n    height: 40,\n    width:400,\n    margin: 12,\n    borderWidth: 1.5,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}