{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/chenmengku/Desktop/CPA_MengKuChen/components/RecipeInfo.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { Icon } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function App(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var recipeId = 716429;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      summary = _useState4[0],\n      setSummary = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imageUrl = _useState6[0],\n      setImageUrl = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ingredeints = _useState8[0],\n      setIngredients = _useState8[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch('https://api.spoonacular.com/recipes/' + recipeId + '/information?apiKey=79215483b19744afb1a46052ce726bdc').then(function (response) {\n              return response.json();\n            }).then(function (cdata) {\n              console.log(cdata);\n              setTitle(cdata.title);\n              setSummary(cdata.summary);\n              setImageUrl(cdata.image);\n              setIngredients(cdata.extendedIngredients);\n            }).catch(function (error) {\n              return console.error(error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: {\n        padding: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: 600\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, item.name), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, item.amount, \" \", item.unit), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, item.consitency));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, title)), React.createElement(View, {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imageUrl\n    },\n    style: {\n      width: 700,\n      height: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 39\n    }\n  })), React.createElement(View, {\n    style: {\n      borderBottomWidth: 2,\n      borderBottomColor: \"rgb(226, 221, 204\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 26\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Ingredients\")), React.createElement(FlatList, {\n    data: ingredeints,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, summary));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    flex: 1,\n    alignItems: 'center',\n    fontSize: 40,\n    padding: 25,\n    fontWeight: \"700\",\n    letterSpacing: 3\n  },\n  imageBackground: {\n    width: '100%',\n    height: '100%'\n  },\n  IngredientsInput: {\n    height: 40,\n    width: 400,\n    margin: 12,\n    borderWidth: 1.5,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/chenmengku/Desktop/CPA_MengKuChen/components/RecipeInfo.js"],"names":["React","useState","useEffect","FlatList","Icon","AsyncStorage","App","route","recipeId","title","setTitle","summary","setSummary","imageUrl","setImageUrl","ingredeints","setIngredients","getData","fetch","then","response","json","cdata","console","log","image","extendedIngredients","catch","error","renderItem","item","padding","fontSize","fontWeight","name","amount","unit","consitency","styles","container","header","marginBottom","uri","width","height","borderBottomWidth","borderBottomColor","id","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","letterSpacing","imageBackground","IngredientsInput","margin","borderWidth"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button, ImageBackground, TextInput, Image } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { Icon } from 'react-native-elements'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n// const { htmlToText } = require('html-to-text');\n\nexport default function App({route}) {\n  // const recipeId = route.params.recipeId\n  const recipeId = 716429\n  const [title,setTitle] = useState()\n  const [summary,setSummary] = useState()\n  const [imageUrl,setImageUrl] = useState()\n  const [ingredeints, setIngredients] = useState([])\n\n  useEffect(() => {\n    getData()\n  }, []);\n\n  const getData = async () => {\n    fetch('https://api.spoonacular.com/recipes/'+recipeId+'/information?apiKey=79215483b19744afb1a46052ce726bdc')\n      .then((response) => response.json())\n      .then((cdata) => {\n        console.log(cdata)\n        setTitle(cdata.title)\n        setSummary(cdata.summary)\n        setImageUrl(cdata.image)\n        setIngredients(cdata.extendedIngredients)\n      })\n    .catch((error)=> console.error(error))\n  }\n\n  const renderItem = ({item}) =>{\n    return (\n      <View style={{ padding:5}}>\n      <Text style={{fontSize:20, fontWeight:600}}>{item.name}</Text>\n      <Text>{item.amount} {item.unit}</Text>\n      <Text>{item.consitency}</Text>\n      </View>\n    )\n  }\n\n  return (\n    <View style={styles.container}>\n      <View>\n      <Text style={styles.header}>\n         {title}\n      </Text>\n      </View>\n      <View style={{marginBottom:20}}><Image source={{uri:imageUrl}} style={{width:700, height:400}}></Image></View>\n      <View style={{borderBottomWidth:2, borderBottomColor: \"rgb(226, 221, 204\", width:\"100%\"}}>\n        <Text style={{fontSize:26}}>Ingredients</Text>\n      </View>\n      <FlatList data = {ingredeints} renderItem={renderItem} keyExtractor={item=>item.id}></FlatList>\n      <Text style={{fontSize:16}}>\n         {summary}\n      </Text>\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    flex:1,\n    alignItems:'center',\n    fontSize:40,\n    padding:25,\n    fontWeight:\"700\",\n    letterSpacing: 3\n  },\n  imageBackground: {\n    width: '100%',\n     height: '100%',\n  },\n  IngredientsInput:{\n    height: 40,\n    width:400,\n    margin: 12,\n    borderWidth: 1.5,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}