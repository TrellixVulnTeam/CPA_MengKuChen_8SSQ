{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/chenmengku/Desktop/CPA_MengKuChen/components/RecipeInfo.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { Icon } from 'react-native-elements';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function App(_ref) {\n  var route = _ref.route;\n  var recipeId = 716429;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      summary = _useState4[0],\n      setSummary = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imageUrl = _useState6[0],\n      setImageUrl = _useState6[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch('https://api.spoonacular.com/recipes/' + recipeId + '/information?apiKey=79215483b19744afb1a46052ce726bdc').then(function (response) {\n              return response.json();\n            }).then(function (cdata) {\n              console.log(cdata);\n              setTitle(cdata.title);\n              setSummary(cdata.summary);\n              setImageUrl(cdata.image);\n            }).catch(function (error) {\n              return console.error(error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, title), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, summary), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imageUrl\n    },\n    style: {\n      width: 200,\n      height: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    flex: 1,\n    alignItems: 'center',\n    fontSize: 48,\n    padding: 25,\n    fontWeight: \"800\"\n  },\n  imageBackground: {\n    width: '100%',\n    height: '100%'\n  },\n  IngredientsInput: {\n    height: 40,\n    width: 400,\n    margin: 12,\n    borderWidth: 1.5,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/chenmengku/Desktop/CPA_MengKuChen/components/RecipeInfo.js"],"names":["React","useState","useEffect","FlatList","Icon","AsyncStorage","App","route","recipeId","title","setTitle","summary","setSummary","imageUrl","setImageUrl","getData","fetch","then","response","json","cdata","console","log","image","catch","error","styles","container","header","uri","width","height","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","padding","fontWeight","imageBackground","IngredientsInput","margin","borderWidth"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button, ImageBackground, TextInput, Image } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { Icon } from 'react-native-elements'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n// const { htmlToText } = require('html-to-text');\n\nexport default function App({route}) {\n  // const recipeId = route.params.recipeId\n  const recipeId = 716429\n  const [title,setTitle] = useState()\n  const [summary,setSummary] = useState()\n  const [imageUrl,setImageUrl] = useState()\n\n  useEffect(() => {\n    getData()\n  }, []);\n\n  const getData = async () => {\n    fetch('https://api.spoonacular.com/recipes/'+recipeId+'/information?apiKey=79215483b19744afb1a46052ce726bdc')\n      .then((response) => response.json())\n      .then((cdata) => {\n        console.log(cdata)\n\n        setTitle(cdata.title)\n        setSummary(cdata.summary)\n        setImageUrl(cdata.image)\n\n      })\n    .catch((error)=> console.error(error))\n  }\n  return (\n    <View style={styles.container}>\n      <View>\n      <Text style={styles.header}>\n         {title}\n      </Text>\n      <Text>\n         {summary}\n      </Text>\n      <View><Image source={{uri:imageUrl}} style={{width:200, height:150}}></Image></View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    flex:1,\n    alignItems:'center',\n    fontSize:48,\n    padding:25,\n    fontWeight:\"800\",\n  },\n  imageBackground: {\n    width: '100%',\n     height: '100%',\n  },\n  IngredientsInput:{\n    height: 40,\n    width:400,\n    margin: 12,\n    borderWidth: 1.5,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}