{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chenmengku/Desktop/COSI/COSI-153A/CA1/components/TipCalculator.js\";\n\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar TipCalculator = function TipCalculator(props) {\n  var _useState = useState(\"0\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      meal = _useState2[0],\n      setMeal = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tip = _useState4[0],\n      setTip = _useState4[1];\n\n  var _useState5 = useState(props.tipRate),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tipRate = _useState6[0],\n      setTipRate = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      debugging = _useState8[0],\n      setDebugging = _useState8[1];\n\n  var debugView = \"\";\n\n  if (debugging) {\n    debugView = React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \" meal: \", meal, \" \"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \" tip: \", tip, \" \"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \" tipRate: \", tipRate, \" \"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, \" debugging: \", debugging, \" \"));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Tip Calculator for tiprate = \", props.tipRate), React.createElement(TextInput, {\n    style: styles.textinput,\n    placeholder: \"tipRate\",\n    onChangeText: function onChangeText(text) {\n      setTipRate(parseFloat(text));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    placeholder: \"cost of meal\",\n    onChangeText: function onChangeText(text) {\n      setMeal(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    color: \"red\",\n    title: \"Calculate Tip\",\n    onPress: function onPress() {\n      return setTip(parseFloat(meal) * tipRate);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \" The tip is \", tip, \" \"), React.createElement(Button, {\n    title: (debugging ? 'hide' : 'show') + \" debug info\",\n    color: \"green\",\n    onPress: function onPress() {\n      return setDebugging(!debugging);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), debugView);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: \"thick solid red\",\n    margin: \"20px\",\n    padding: \"20px\"\n  },\n  textinput: {\n    margin: 20,\n    fontSize: 20\n  },\n  header: {\n    fontSize: 40,\n    color: 'blue'\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n});\nexport default TipCalculator;","map":{"version":3,"sources":["/Users/chenmengku/Desktop/COSI/COSI-153A/CA1/components/TipCalculator.js"],"names":["React","useState","TipCalculator","props","meal","setMeal","tip","setTip","tipRate","setTipRate","debugging","setDebugging","debugView","styles","container","header","textinput","text","parseFloat","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","border","margin","padding","fontSize","color","rowContainer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, StyleSheet, Text, TextInput, View } from \"react-native\";\n\n\n// const mph2fps = (mph) => mph*5280/3600\n\nconst TipCalculator = (props) => {\n  const [meal, setMeal] = useState(\"0\");\n  const [tip, setTip] = useState(0);\n  const [tipRate,setTipRate] = useState(props.tipRate)\n  const [debugging,setDebugging] = useState(false)\n\n  let debugView = \"\"\n  if (debugging) {\n    debugView =\n      <View>\n          <Text> meal: {meal} </Text>\n          <Text> tip: {tip} </Text>\n          <Text> tipRate: {tipRate} </Text>\n          <Text> debugging: {debugging} </Text>\n      </View>\n  }\n\n      return (\n  <View style={styles.container}>\n    <Text style={styles.header}>\n       Tip Calculator for tiprate = {props.tipRate}\n    </Text>\n    <TextInput\n          style={styles.textinput}\n          placeholder=\"tipRate\"\n          onChangeText={text => {setTipRate(parseFloat(text))}}\n      />\n    <TextInput\n          style={styles.textinput}\n          placeholder=\"cost of meal\"\n          onChangeText={text => {setMeal(text)}}\n      />\n    <Button\n          color='red' title='Calculate Tip'\n          onPress = {() =>\n               setTip(parseFloat(meal)*tipRate)          }\n      />\n\n    <Text> The tip is {tip} </Text>\n\n    <Button\n        title={(debugging?'hide':'show')+\" debug info\" }\n        color=\"green\"\n        onPress = {() => setDebugging(!debugging)}\n        />\n        {debugView}\n  </View>\n      );\n    }\n  const styles = StyleSheet.create ({\n    container: {\n      flex: 1,\n      flexDirection:'column',\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: \"thick solid red\",\n      margin:\"20px\",\n      padding:\"20px\",\n    },\n    textinput:{\n      margin:20,\n      fontSize:20\n    },\n    header: {\n      fontSize:40,\n      color:'blue'\n    },\n    rowContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n  });\n\nexport default TipCalculator;\n"]},"metadata":{},"sourceType":"module"}