{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chenmengku/Desktop/COSI/COSI-153A/CPA1-old/components/Pomodoros.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar Pomodoros = function Pomodoros() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateTime = _useState2[0],\n      setDateTime = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goal = _useState4[0],\n      setGoal = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      result = _useState6[0],\n      setResult = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pomodoros = _useState8[0],\n      setPomodoros = _useState8[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@pomodoros'));\n\n          case 3:\n            jsonValue = _context.sent;\n            data = null;\n\n            if (jsonValue != null) {\n              data = JSON.parse(jsonValue);\n              setPomodoros(data);\n              console.log('just set Info, Name and Email');\n            } else {\n              console.log('just read a null value from Storage');\n              setPomodoros([]);\n              setDateTime(\"\");\n              setGoal(\"\");\n              setResult(\"\");\n            }\n\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@pomodoros', jsonValue));\n\n          case 4:\n            console.log('just stored ' + jsonValue);\n            _context2.next = 11;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"error in storeData \");\n            console.dir(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var clearAll = function clearAll() {\n    return _regeneratorRuntime.async(function clearAll$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log('in clearData');\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 4:\n            _context3.next = 10;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"error in clearData \");\n            console.dir(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var renderPomodoro = function renderPomodoro(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: styles.pomodoro,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }, item.dateTime), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    }, item.goal, \" \"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, item.result, \" \"));\n  };\n\n  var debug = false;\n  var debugView = React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"DEBUGGING INFO\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"dateTime is (\", dateTime, \")\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"goal is (\", goal, \")\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"result is (\", result, \")\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"pomodoros is \", JSON.stringify(pomodoros)));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Pomodoros\"), React.createElement(Text, {\n    style: {\n      fontSize: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Enter the info for your current pomodoro below\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      margin: 20,\n      justifyContent: 'space-around'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      fontSize: 10\n    },\n    placeholder: \"Date/Time\",\n    onChangeText: function onChangeText(text) {\n      setDateTime(text);\n    },\n    value: dateTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      fontSize: 12\n    },\n    placeholder: \"Goal\",\n    onChangeText: function onChangeText(text) {\n      setGoal(text);\n    },\n    value: goal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      fontSize: 12\n    },\n    placeholder: \"Result\",\n    onChangeText: function onChangeText(text) {\n      setResult(text);\n    },\n    value: result,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Record\",\n    color: \"blue\",\n    onPress: function onPress() {\n      var newPomodoros = pomodoros.concat({\n        'dateTime': dateTime,\n        'goal': goal,\n        'result': result,\n        'completed': new Date()\n      });\n      setPomodoros(newPomodoros);\n      storeData(newPomodoros);\n      setDateTime(\"\");\n      setGoal(\"\");\n      setResult(\"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Clear\",\n    color: \"red\",\n    onPress: function onPress() {\n      clearAll();\n      setPomodoros([]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      backgroundColor: 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: 'green',\n      backgroundColor: 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"History of Pomodoros\")), React.createElement(FlatList, {\n    data: pomodoros.reverse(),\n    renderItem: renderPomodoro,\n    keyExtractor: function keyExtractor(item) {\n      return item.dateTime;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }), debug ? debugView : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    textAlign: 'left',\n    marginTop: 20,\n    padding: 20\n  },\n  pomodoro: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerText: {\n    textAlign: 'center',\n    backgroundColor: '#aaa',\n    fontSize: 32,\n    padding: 10,\n    color: 'blue'\n  }\n});\nexport default Pomodoros;","map":{"version":3,"sources":["/Users/chenmengku/Desktop/COSI/COSI-153A/CPA1-old/components/Pomodoros.js"],"names":["React","useState","useEffect","AsyncStorage","Pomodoros","dateTime","setDateTime","goal","setGoal","result","setResult","pomodoros","setPomodoros","getData","getItem","jsonValue","data","JSON","parse","console","log","dir","storeData","value","stringify","setItem","clearAll","clear","renderPomodoro","item","styles","pomodoro","debug","debugView","headerText","container","fontSize","flexDirection","margin","justifyContent","text","newPomodoros","concat","Date","backgroundColor","color","reverse","StyleSheet","create","flex","textAlign","marginTop","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport { View, Button,\n         FlatList, StyleSheet,\n         Text, TextInput } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nconst Pomodoros = () => {\n  const [dateTime,setDateTime] = useState(\"\")\n  const [goal,setGoal] = useState(\"\")\n  const [result,setResult] = useState(\"\")\n  const [pomodoros,setPomodoros]= useState([])\n\n  // this loads in the data after the app has been rendered\n  useEffect(() => {getData()}\n           ,[])\n\n  const getData = async () => {\n        try {\n          // the '@profile_info' can be any string\n          const jsonValue = await AsyncStorage.getItem('@pomodoros')\n          let data = null\n          if (jsonValue!=null) {\n            data = JSON.parse(jsonValue)\n            setPomodoros(data)\n            console.log('just set Info, Name and Email')\n          } else {\n            console.log('just read a null value from Storage')\n            // this happens the first time the app is loaded\n            // as there is nothing in storage...\n            setPomodoros([])\n            setDateTime(\"\")\n            setGoal(\"\")\n            setResult(\"\")\n          }\n        } catch(e) {\n          console.log(\"error in getData \")\n          // this shouldn't happen, but its good practice\n          // to check for errors!\n          console.dir(e)\n          // error reading value\n        }\n  }\n\n  const storeData = async (value) => {\n        try {\n          const jsonValue = JSON.stringify(value)\n          await AsyncStorage.setItem('@pomodoros', jsonValue)\n          console.log('just stored '+jsonValue)\n        } catch (e) {\n          console.log(\"error in storeData \")\n          console.dir(e)\n          // saving error\n        }\n  }\n\n  const clearAll = async () => {\n        try {\n          console.log('in clearData')\n          await AsyncStorage.clear()\n        } catch(e) {\n          console.log(\"error in clearData \")\n          console.dir(e)\n          // clear error\n        }\n  }\n\n\n// Each Pomorodo in the FlatList will be rendered as follows:\n  const renderPomodoro = ({item}) => {\n    return (\n      <View style={styles.pomodoro}>\n           <Text>{item.dateTime}</Text>\n           <Text>{item.goal} </Text>\n           <Text>{item.result} </Text>\n      </View>\n    )\n  }\n\n// We can set debug to true if we want to see all of the state variables\n  let debug=false\n  const debugView =\n    (<View>\n      <Text style={styles.headerText}>\n        DEBUGGING INFO\n      </Text>\n      <Text>\n         dateTime is ({dateTime})\n      </Text>\n      <Text>\n         goal is ({goal})\n      </Text>\n      <Text>\n         result is ({result})\n      </Text>\n      <Text>\n         pomodoros is {JSON.stringify(pomodoros)}\n      </Text>\n  </View>);\n\n  // here is where we render the app\n  return (\n\n    <View style={styles.container}>\n      <Text style={styles.headerText}>Pomodoros</Text>\n      <Text style={{fontSize:12}}>\n          Enter the info for your current pomodoro below\n      </Text>\n\n      <View style={{flexDirection:'row',\n                    margin:20,\n                    justifyContent:'space-around'}}>\n            <TextInput // for the date/time\n              style={{fontSize:10}}\n              placeholder=\"Date/Time\"\n              onChangeText={text => {\n                   setDateTime(text);\n                 }}\n              value = {dateTime}\n            />\n\n            <TextInput // for the goal\n              style={{fontSize:12}}\n              placeholder=\"Goal\"\n              onChangeText={text => {\n                   setGoal(text);\n                 }}\n              value = {goal}\n            />\n\n            <TextInput // for the result\n              style={{fontSize:12}}\n              placeholder=\"Result\"\n              onChangeText={text => {\n                   setResult(text);\n                 }}\n              value = {result}\n            />\n        </View>\n        <View style={{flexDirection:'row',\n                      justifyContent:'space-around'}}>\n        <Button\n               title={\"Record\"}\n               color=\"blue\"\n               onPress = {() => {\n                 const newPomodoros =\n                   pomodoros.concat(\n                     {'dateTime':dateTime,\n                      'goal':goal,\n                      'result':result,\n                      'completed':new Date()\n                   })\n                 setPomodoros(newPomodoros)\n                 storeData(newPomodoros)\n                 setDateTime(\"\")\n                 setGoal(\"\")\n                 setResult(\"\")\n               }}\n               />\n        <Button\n                title={\"Clear\"}\n                color=\"red\"\n                onPress = {() => {\n                  clearAll()\n                  setPomodoros([])\n                }}\n                />\n\n      </View>\n      <View style={{flexDirection:'row',\n                    justifyContent:'center',\n                    backgroundColor:'lightgray'}}>\n        <Text style={{fontSize:20,\n                      color:'green',backgroundColor:'lightgray'}}>\n              History of Pomodoros\n         </Text>\n      </View>\n\n      <FlatList\n        data={pomodoros.reverse()}\n        renderItem={renderPomodoro}\n        keyExtractor={item => item.dateTime}\n      />\n\n      {debug?debugView: <Text></Text>}\n      \n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection:'column',\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    textAlign:'left',\n    marginTop:20,\n    padding:20,\n  },\n  pomodoro:{\n    flexDirection:'row',\n    justifyContent:'space-between',\n  },\n  headerText: {\n    textAlign:'center',\n    backgroundColor:'#aaa',\n    fontSize: 32,\n    padding:10,\n    color: 'blue'\n  },\n\n});\n\n\nexport default Pomodoros;\n"]},"metadata":{},"sourceType":"module"}